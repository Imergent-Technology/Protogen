services:
  # Laravel App
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: api
    working_dir: /var/www
    volumes:
      - ./api:/var/www
    depends_on:
      - postgres
    networks:
      - app-network

  # Nginx for Laravel
  webserver:
    image: nginx:alpine
    container_name: webserver
    ports:
      - "8080:80"
    volumes:
      - ./docker/nginx:/etc/nginx/conf.d
      - ./api:/var/www
    depends_on:
      - api
    networks:
      - app-network

  # PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-protogen_dev}
      POSTGRES_USER: ${POSTGRES_USER:-protogen}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-protogen_dev_password}
    ports:
      - "5432:5432"
    volumes:
      - postgresdata:/var/lib/postgresql/data
    networks:
      - app-network

  # React frontend dev server
  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile
    container_name: ui
    working_dir: /app
    volumes:
      - ./ui:/app
      - ./shared:/shared
      - /app/node_modules
    ports:
      - "3000:3000"
    networks:
      - app-network

  # React admin dev server
  admin:
    build:
      context: ./admin
      dockerfile: Dockerfile
    container_name: admin
    working_dir: /app
    volumes:
      - ./admin:/app
      - ./shared:/shared
      - /app/node_modules
    ports:
      - "3001:3001"
    networks:
      - app-network

volumes:
  postgresdata:

networks:
  app-network:
    driver: bridge
