services:
  # Laravel App
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: protogen-api
    working_dir: /var/www
    user: "${UID:-1000}:${GID:-1000}"
    env_file:
      - ./api/.env
    volumes:
      - ./api:/var/www
    depends_on:
      - postgres
    networks:
      - app-network

  # Nginx for Laravel
  webserver:
    image: nginx:alpine
    container_name: protogen-webserver
    ports:
      - "8080:80"
    volumes:
      - ./docker/nginx:/etc/nginx/conf.d
      - ./api:/var/www
    depends_on:
      - api
    networks:
      - app-network

  # PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: protogen-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-protogen_dev}
      POSTGRES_USER: ${POSTGRES_USER:-protogen}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-your_secure_dev_password_here}
    ports:
      - "5432:5432"
    volumes:
      - postgresdata:/var/lib/postgresql/data
    networks:
      - app-network

  # React frontend dev server
  portal:
    build:
      context: ./portal
      dockerfile: Dockerfile
    container_name: protogen-portal
    working_dir: /app
    volumes:
      - ./portal:/app
      - ./shared:/shared
      - ./config:/config
      - /app/node_modules
    ports:
      - "3000:3000"
    networks:
      - app-network

  # React admin dev server
  admin:
    build:
      context: ./admin
      dockerfile: Dockerfile
    container_name: protogen-admin
    working_dir: /app
    volumes:
      - ./admin:/app
      - ./shared:/shared
      - ./config:/config
      - /app/node_modules
    ports:
      - "3001:3001"
    networks:
      - app-network

  # pgAdmin - PostgreSQL GUI
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: protogen-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@protogen.dev
      PGADMIN_DEFAULT_PASSWORD: ProtogenDevPassword123
      PGADMIN_SERVER_JSON_FILE: /pgadmin4/servers.json
    ports:
      - "5050:80"
    volumes:
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - app-network

volumes:
  postgresdata:
  pgadmin_data:

networks:
  app-network:
    driver: bridge
